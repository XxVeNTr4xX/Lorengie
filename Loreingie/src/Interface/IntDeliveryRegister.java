package Interface;

import Logic.Delivery;
import Logic.Product;
import Persistence.MSAccess;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *Class IntDeliveryRegister
 * @author ASUS_
 */
public class IntDeliveryRegister extends javax.swing.JFrame {
    private List<Delivery> deliveryList;
    private int indexdelivery; 
    final String fileDelivery =  "Delivery.csv";
    final String separator = ",";
    private MSAccess dataFile; 
    Calendar c;
    
    DefaultTableModel modelo;
    
    public IntDeliveryRegister() {

        initComponents();
        c=Calendar.getInstance();
        int d=c.get(Calendar.DATE),m=1+c.get(Calendar.MONTH),a=c.get(Calendar.YEAR); 
        txtDate.setText(d+"-"+m+"-"+a);
        txtDate.setEditable(false);
        modelo = new DefaultTableModel();
        this.setDataFile(new MSAccess());
        tblDelivery.setModel(modelo);
        
        modelo.addColumn(" Delivery date");
        modelo.addColumn("Adress");
        modelo.addColumn("Recipient name");
        modelo.addColumn("Recipient phone");
        this.addTable();
        
    }

    public List<Delivery> getDeliveryList() {
        return deliveryList;
    }

    public void setDeliveryList(List<Delivery> deliveryList) {
        this.deliveryList = deliveryList;
    }

    public int getIndexdelivery() {
        return indexdelivery;
    }

    public void setIndexdelivery(int indexdelivery) {
        this.indexdelivery = indexdelivery;
    }

    public MSAccess getDataFile() {
        return dataFile;
    }

    public void setDataFile(MSAccess dataFile) {
        this.dataFile = dataFile;
    }
    
    
    
    
    
    public JLabel getLabelUser() {
        return lblUser;
    }
    
    public void setLabelUser(String userName) {
        this.lblUser.setText(userName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDeliveryRegister = new javax.swing.JPanel();
        lblDelReg = new javax.swing.JLabel();
        lblDateTime = new javax.swing.JLabel();
        lblDelAdd = new javax.swing.JLabel();
        lblNameRec = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();
        txtAdress = new javax.swing.JTextField();
        txtNameRec = new javax.swing.JTextField();
        pnlDelivery = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDelivery = new javax.swing.JTable();
        lblPhoneRec = new javax.swing.JLabel();
        txtPhoneRec = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        lblUser = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlDeliveryRegister.setBackground(new java.awt.Color(204, 204, 255));

        lblDelReg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cooltext165385488635741.png"))); // NOI18N

        lblDateTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDateTime.setText("Date and Time");

        lblDelAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDelAdd.setText("Delivery address");

        lblNameRec.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNameRec.setText("Name of the recipient");

        btnNew.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnNew.setText("Save");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        tblDelivery.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDelivery.setEnabled(false);
        jScrollPane1.setViewportView(tblDelivery);

        javax.swing.GroupLayout pnlDeliveryLayout = new javax.swing.GroupLayout(pnlDelivery);
        pnlDelivery.setLayout(pnlDeliveryLayout);
        pnlDeliveryLayout.setHorizontalGroup(
            pnlDeliveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDeliveryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDeliveryLayout.setVerticalGroup(
            pnlDeliveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDeliveryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblPhoneRec.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPhoneRec.setText("Phone number");

        txtPhoneRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneRecActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDeliveryRegisterLayout = new javax.swing.GroupLayout(pnlDeliveryRegister);
        pnlDeliveryRegister.setLayout(pnlDeliveryRegisterLayout);
        pnlDeliveryRegisterLayout.setHorizontalGroup(
            pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDeliveryRegisterLayout.createSequentialGroup()
                .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDeliveryRegisterLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDeliveryRegisterLayout.createSequentialGroup()
                                .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNameRec)
                                    .addComponent(lblDelAdd)
                                    .addComponent(lblDateTime))
                                .addGap(18, 18, 18)
                                .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtNameRec, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(txtAdress, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPhoneRec)
                                    .addComponent(txtDate, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(pnlDeliveryRegisterLayout.createSequentialGroup()
                                .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnNew)
                                    .addComponent(lblPhoneRec))
                                .addGap(26, 26, 26)
                                .addComponent(btnClear)))
                        .addGap(39, 39, 39)
                        .addComponent(pnlDelivery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDeliveryRegisterLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(49, 49, 49)
                        .addComponent(lblDelReg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlDeliveryRegisterLayout.setVerticalGroup(
            pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDeliveryRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDelReg)
                    .addComponent(btnBack)
                    .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDeliveryRegisterLayout.createSequentialGroup()
                        .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDateTime)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDelAdd)
                            .addComponent(txtAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNameRec)
                            .addComponent(txtNameRec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhoneRec)
                            .addComponent(txtPhoneRec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(pnlDeliveryRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNew)
                            .addComponent(btnClear))))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDeliveryRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDeliveryRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPhoneRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneRecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneRecActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
      if (btnNew.getText().equals("New")) {
            this.newInterface();
        }
        else if (btnNew.getText().equals("Save")) {
            if (validateView()) {
                this.insertDelivery();
                this.addTable();
            }
            else {
                JOptionPane.showMessageDialog(this, "Please, fill the requeried fields", 
                 "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
       txtAdress.setText("");
       txtNameRec.setText("");
       txtPhoneRec.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IntDeliveryRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IntDeliveryRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IntDeliveryRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IntDeliveryRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IntDeliveryRegister().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnNew;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDateTime;
    private javax.swing.JLabel lblDelAdd;
    private javax.swing.JLabel lblDelReg;
    private javax.swing.JLabel lblNameRec;
    private javax.swing.JLabel lblPhoneRec;
    private javax.swing.JLabel lblUser;
    private javax.swing.JPanel pnlDelivery;
    private javax.swing.JPanel pnlDeliveryRegister;
    private javax.swing.JTable tblDelivery;
    private javax.swing.JTextField txtAdress;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtNameRec;
    private javax.swing.JTextField txtPhoneRec;
    // End of variables declaration//GEN-END:variables

//    private void updateInterface() {
//        if (txtAdress.getText().equals("")
//               || (datDate.getDate() == null)
//               || txtNameRec.getText().equals("")
//               || txtPhoneRec.getText().equals("")) {
//           JOptionPane.showMessageDialog(this, "Plaese fill the requiered fields","Error",JOptionPane.ERROR_MESSAGE);
//       }
//       else{
//            Delivery delivery = interface2Object();
//            this.getDeliveryList().add(delivery);
//            this.setIndexdelivery(this.getIndexdelivery()+1);
//               
//  
//               btnNew.setText("New");
//       }
//        this.addTable();
//    }
    
    private boolean validateView(){
        boolean validate;
         validate = !(txtAdress.getText().equals("")
                    || txtNameRec.getText().equals("")
                    || txtPhoneRec.getText().equals("")
                    );
        return validate;
     }

    private Delivery interface2Object() {
        Delivery delivery = new Delivery();
        delivery.setDate(txtAdress.getText());
        delivery.setAdress(txtAdress.getText());
        delivery.setNameRecipient(txtNameRec.getText());
        delivery.setPhoneRecipient(Long.parseLong(txtPhoneRec.getText()));
        return delivery;
    }

    private void addTable() {
     for (int i = 0; i<tblDelivery.getRowCount(); i++) {
            modelo.removeRow(i);
            i-=1;
        }
        Object []object = new Object[4];
        try {
            String query = "SELECT * FROM Delivery";
            this.getDataFile().execute(query);
            while(dataFile.getResultSet().next()) {
                object[0] = dataFile.getResultSet().getString("dateDelivery");
                object[1] = dataFile.getResultSet().getString("address");
                object[2] = dataFile.getResultSet().getString("nameRecipient");
                object[3] = dataFile.getResultSet().getString("phoneRecipient");
                modelo.addRow(object);
            }
        } catch (SQLException | NullPointerException ex) {
            Logger.getLogger(IntRegEli.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void newInterface() {
        txtDate.setText("");
        txtAdress.setText("");
        txtNameRec.setText("");
        txtPhoneRec.setText("");
        btnNew.setText("Save");
    }
    
     private void insertDelivery() {
         Delivery delivery= this.interface2Object();
        String query = "INSERT INTO Delivery"
                + "(dateDelivery, address, nameRecipient,phoneRecipient)"
                + "VALUES ('"
                + delivery.getDate() + "','"
                + delivery.getAdress()+ "','"
                + delivery.getNameRecipient() + "',"
                + delivery.getPhoneRecipient() +")";
        if (this.getDataFile().execute(query)) {
            JOptionPane.showMessageDialog(this, "product registered");
        }
        else
           JOptionPane.showMessageDialog(this, "Repeated Code", "error",JOptionPane.ERROR);
    }

}
